import os
import re
import random
import logging
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    AIORateLimiter,
    filters,
)

# –õ–æ–≥–∏ –≤–∏–¥–Ω—ã –≤ Railway ‚Üí Logs
logging.basicConfig(level=logging.INFO, format="%(asctime)s %(levelname)s %(message)s")
log = logging.getLogger("d6-d20-bot")

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # –∑–∞–¥–∞–π –≤ Railway Variables

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø D6-bot (+ D20).\n"
        "–ö–æ–º–∞–Ω–¥—ã: /d6 –∏ /d20.\n"
        "–í –≥—Ä—É–ø–ø–∞—Ö –º–æ–≥—É —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ '–¥6' –∏–ª–∏ '–¥20' –±–µ–∑ —Å–ª–µ—à–∞ ‚Äî –µ—Å–ª–∏ –≤ @BotFather –≤—ã–∫–ª—é—á–µ–Ω privacy."
    )

async def roll_d6(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(f"üé≤ (D6) –í—ã–ø–∞–ª–æ: {random.randint(1, 6)}")

async def roll_d20(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(f"üé≤ (D20) –í—ã–ø–∞–ª–æ: {random.randint(1, 20)}")

# –ª–æ–≤–∏–º –¥6/d6/–¥20/d20 –∏ –¥–∞–∂–µ /–¥6 –∫–∞–∫ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç (–µ—Å–ª–∏ privacy –æ—Ç–∫–ª—é—á–µ–Ω)
DICE_REGEX = re.compile(r"^\s*[\/]?(?:–¥6|d6|–¥20|d20)\s*$", re.IGNORECASE)

async def on_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    msg = update.message
    if not msg or not msg.text:
        return
    txt = msg.text.strip().lower()
    if DICE_REGEX.match(txt):
        if "20" in txt:
            await roll_d20(update, context)
        else:
            await roll_d6(update, context)

async def post_init(app: Application) -> None:
    await app.bot.set_my_commands([
        ("d6", "–ë—Ä–æ—Å–∏—Ç—å —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫"),
        ("d20", "–ë—Ä–æ—Å–∏—Ç—å –¥–≤–∞–¥—Ü–∞—Ç–∏–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫"),
    ])
    me = await app.bot.get_me()
    log.info("Bot started as @%s (id=%s)", me.username, me.id)

def main() -> None:
    if not TOKEN:
        raise RuntimeError("–ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_BOT_TOKEN. –ó–∞–¥–∞–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ Railway.")

    app = (
        Application.builder()
        .token(TOKEN)
        .post_init(post_init)
        .rate_limiter(AIORateLimiter())
        .build()
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("d6", roll_d6))
    app.add_handler(CommandHandler("d20", roll_d20))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, on_text))

    app.run_polling(allowed_updates=["message", "edited_message", "callback_query"])

if __name__ == "__main__":
    main()
